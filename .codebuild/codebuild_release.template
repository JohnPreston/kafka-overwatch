Metadata:
  Author: https://github.com/johnpreston
Parameters:
  DockerRepositoryName:
    Type: String
  RepositoryOrganization:
    Type: String
    Default: compose-x
  RepositoryProvider:
    Type: String
    AllowedValues:
      - GitHub
      - CodeCommit
    Default: GitHub
  RepositoryName:
    Type: String
  BuildLogsRetentionDays:
    Type: Number
    AllowedValues:
      - 1
      - 3
      - 5
      - 7
      - 14
      - 30
      - 60
      - 90
      - 120
      - 150
      - 180
      - 365
      - 400
      - 545
      - 731
      - 1827
      - 3653
    Default: 14
  ReferenceBranchName:
    Type: String
    Default: main
  DockerBuildspecFile:
    Type: String
    Default: .codebuild/buildspec.yaml
  MarketplaceRegistryAccountId:
    Type: String
Mappings:
  RepoUrlPrefixes:
    GitHub:
      Prefix: https://github.com/
Conditions:
  UseGitHub:
    Fn::Equals:
      - Ref: RepositoryProvider
      - GitHub
  UseCodeCommit:
    Fn::Equals:
      - Ref: RepositoryProvider
      - CodeCommit
Resources:
  BuildLogsGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName:
        Fn::Sub: codebuild/pr-builds/${RepositoryName}
      RetentionInDays:
        Ref: BuildLogsRetentionDays
  CodeBuildRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Action:
              - sts:AssumeRole
            Effect: Allow
            Principal:
              Service:
                - Fn::Sub: codebuild.${AWS::URLSuffix}
      Policies:
        - PolicyName: ContentAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Sid: CloudWatchLogs
                Effect: Allow
                Action:
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource:
                  - Fn::Sub: ${BuildLogsGroup.Arn}
              - Sid: CodeBuildReportsAccess
                Effect: Allow
                Resource:
                  - Fn::Sub: arn:${AWS::Partition}:codebuild:${AWS::Region}:${AWS::AccountId}:report-group/*
                Action:
                  - codebuild:UpdateReportGroup
                  - codebuild:CreateReportGroup
                  - codebuild:CreateReport
                  - codebuild:UpdateReport
                  - codebuild:BatchPut*
              - Sid: CodeBuildBatch
                Effect: Allow
                Resource:
                  - Fn::Sub: arn:${AWS::Partition}:codebuild:${AWS::Region}:${AWS::AccountId}:*
                Action:
                  - codebuild:StartBuild
                  - codebuild:RetryBuild
              - Sid: ECRAuthAndGetFromAny
                Effect: Allow
                Resource:
                  - '*'
                Action:
                  - ecr:GetAuthorizationToken
                  - ecr:BatchGetImage
                  - ecr:BatchCheckLayerAvailability
                  - ecr:GetDownloadUrlForLayer
              - Sid: ECRPublishToAnyPrivateRepo
                Effect: Allow
                Resource:
                  - Fn::Sub: arn:${AWS::Partition}:ecr:${AWS::Region}:${AWS::AccountId}:repository/*
                  - Fn::Sub: arn:${AWS::Partition}:ecr:us-east-1:${MarketplaceRegistryAccountId}:repository/*
                Action:
                  - ecr:InitiateLayerUpload
                  - ecr:UploadLayerPart
                  - ecr:CompleteLayerUpload
                  - ecr:PutImage
              - Sid: PublicEcrAuth
                Effect: Allow
                Resource:
                  - '*'
                  - Fn::Sub: arn:${AWS::Partition}:ecr:us-east-1:${MarketplaceRegistryAccountId}:repository/*
                Action:
                  - ecr-public:GetAuthorizationToken
                  - sts:GetServiceBearerToken
                  - ecr-public:BatchCheckLayerAvailability
                  - ecr-public:GetRepositoryPolicy
                  - ecr-public:DescribeRepositories
                  - ecr-public:DescribeRegistries
                  - ecr-public:DescribeImages
                  - ecr-public:DescribeImageTags
                  - ecr-public:GetRepositoryCatalogData
                  - ecr-public:GetRegistryCatalogData
              - Sid: PublicEcrPublish
                Effect: Allow
                Resource:
                  - Fn::Sub: arn:${AWS::Partition}:ecr-public::${AWS::AccountId}:repository/*
                  - Fn::Sub: arn:${AWS::Partition}:ecr:us-east-1:${MarketplaceRegistryAccountId}:repository/*
                Action:
                  - ecr-public:InitiateLayerUpload
                  - ecr-public:UploadLayerPart
                  - ecr-public:CompleteLayerUpload
                  - ecr-public:PutImage
  DockerImagesBuild:
    Type: AWS::CodeBuild::Project
    Properties:
      Name:
        Ref: AWS::StackName
      ServiceRole:
        Fn::GetAtt:
          - CodeBuildRole
          - Arn
      Description:
        Fn::Sub: Publishes new docker images on updates
      LogsConfig:
        CloudWatchLogs:
          GroupName:
            Ref: BuildLogsGroup
          Status: ENABLED
          StreamName: docker-builds
      BadgeEnabled: true
      Artifacts:
        Type: NO_ARTIFACTS
      BuildBatchConfig:
        CombineArtifacts: false
        Restrictions:
          ComputeTypesAllowed:
            - BUILD_GENERAL1_SMALL
            - BUILD_GENERAL1_MEDIUM
            - BUILD_GENERAL1_LARGE
          MaximumBuildsAllowed: 10
        ServiceRole:
          Fn::GetAtt:
            - CodeBuildRole
            - Arn
        TimeoutInMins: 60
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:7.0
        Type: LINUX_CONTAINER
        EnvironmentVariables:
          - Name: MARKET_REPO_ACCOUNT_ID
            Type: PLAINTEXT
            Value:
              Ref: MarketplaceRegistryAccountId
          - Name: MARKET_REPO_AWS_REGION
            Type: PLAINTEXT
            Value: us-east-1
          - Name: DOCKER_REPO_NAME
            Type: PLAINTEXT
            Value:
              Ref: DockerRepositoryName
      Source:
        Type: GITHUB
        ReportBuildStatus: true
        Location:
          Fn::If:
            - UseGitHub
            - Fn::Sub: https://github.com/${RepositoryOrganization}/${RepositoryName}
            - Fn::Sub: https://codecommit.${AWS::Region}.${AWS::URLSuffix}
        InsecureSsl: false
        BuildSpec:
          Ref: DockerBuildspecFile
      Triggers:
        Webhook: true
        BuildType: BUILD_BATCH
        FilterGroups:
          - - Type: EVENT
              Pattern: PULL_REQUEST_MERGED
              ExcludeMatchedPattern: false
            - Type: HEAD_REF
              Pattern: ^refs/heads/.*$
              ExcludeMatchedPattern: false
            - Type: BASE_REF
              Pattern:
                Fn::Sub: ^refs/heads/${ReferenceBranchName}$
              ExcludeMatchedPattern: false
          - - Type: EVENT
              Pattern: PUSH
              ExcludeMatchedPattern: false
            - Type: HEAD_REF
              Pattern:
                Fn::Sub: ^refs/tags/v.*$
              ExcludeMatchedPattern: false
