# generated by datamodel-codegen:
#   filename:  config.json

from __future__ import annotations

from dataclasses import dataclass, field
from enum import Enum
from typing import Any, Dict, List, Optional


@dataclass
class AwsEmf:
    namespace: str
    high_resolution_metrics: Optional[bool] = False
    """
    https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/publishingMetrics.html#high-resolution-metrics
    """
    dimensions: Optional[Dict[str, str]] = None
    """
    Dimension name and value to set in a key/value format.
    """
    enabled: Optional[bool] = None


@dataclass
class Template:
    """
    Allows to set specific templates for email and sms
    """

    email: Optional[str] = None
    """
    Optional - Path to a template for SNS Email messages
    """
    sms: Optional[str] = None
    """
    Optional - Path to a template for SNS SMS messages
    """


@dataclass
class SnsTopicChannel:
    topic_arn: str
    """
    ARN of the SNS topic.
    """
    role_arn: Optional[str] = None
    """
    Optional - Use IAM role to publish messages using another IAM role
    """
    ignore_errors: Optional[bool] = None
    """
    Prevents exception if true when an exception occurs.
    """
    template: Optional[Template] = None
    """
    Allows to set specific templates for email and sms 
    """


@dataclass
class Prometheus:
    enabled: Optional[bool] = None


@dataclass
class ClusterMetrics:
    prometheus: Optional[Prometheus] = None
    aws_emf: Optional[AwsEmf] = None


Regexes = List[str]


class BackupStyle(Enum):
    cfn_kafka_admin = "cfn-kafka-admin"
    kafka_topics_sh = "kafka-topics.sh"


@dataclass
class AssumeRole:
    RoleArn: str
    """
    Optional - IAM Role ARN to assume
    """
    RoleSessionName: Optional[str] = "kafka-overwatch@aws"
    """
    Optional - Name of the session to use
    """
    ExternalId: Optional[str] = None
    """
    Optional - External ID to use when assuming a role
    """


@dataclass
class IamOverride:
    """
    Optional - IAM profile/settings override to use. Defaults to SDK settings.
    """

    ProfileName: Optional[str] = None
    """
    Optional - Use IAM profile to publish messages using another IAM profile
    """
    AssumeRole: Optional[AssumeRole] = None


ClusterScanIntervalInSeconds = int


@dataclass
class Global:
    """
    Global settings. Apply to all clusters
    """

    ClusterScanIntervalInSeconds: ClusterScanIntervalInSeconds


@dataclass
class AwsEmfModel:
    log_group_name: Optional[str] = "kafka/cluster/overwatch/metrics"
    """
    override log group name to publish metrics to. Importance: High
    """
    service_name: Optional[str] = None
    """
    override value for EMF Service name. Importance: Low
    """
    watcher_config: Optional[AwsEmf] = None


@dataclass
class NotificationChannels:
    """
    Channels to send notifications to when reports have been generated.
    """

    sns: Optional[Dict[str, SnsTopicChannel]] = None


@dataclass
class S3Output:
    BucketName: Optional[str] = None
    """
    Name of the S3 bucket
    """
    PrefixKey: Optional[str] = ""
    """
    Path in the bucket.
    """
    IamOverride: Optional[IamOverride] = None


@dataclass
class ReportingConfig:
    """
    Configure reporting output. Applies to all clusters.
    """

    evaluation_period_in_seconds: Optional[int] = 60
    """
    Time to wait before generating reports
    """
    S3: Optional[S3Output] = None
    local: Optional[str] = "/tmp/kafka-overwatch-reports/"
    """
    Local directory to store the reports to.
    """
    kafka: Optional[Dict[str, Any]] = None
    """
    Configuration to persist reports into Kafka. Not yet implemented.
    """


@dataclass
class ClusterConfigAuth:
    """
    Allows to set override configuration for secret values interpolation
    """

    iam_override: Optional[IamOverride] = None


@dataclass
class ClusterConfig:
    kafka: Dict[str, Any]
    """
    Configuration as documented in https://github.com/confluentinc/librdkafka/blob/master/CONFIGURATION.md
    """
    cluster_config_auth: Optional[ClusterConfigAuth] = None
    """
    Allows to set override configuration for secret values interpolation
    """


@dataclass
class GatewayConfiguration:
    gateway_config: Optional[Dict[str, Any]] = None
    reporting_config: Optional[ReportingConfig] = None
    topic_include_regexes: Optional[Regexes] = None
    topic_exclude_regexes: Optional[Regexes] = None
    metrics: Optional[ClusterMetrics] = None
    """
    Configure metrics export for the cluster
    """


@dataclass
class ClusterTopicBackupConfig:
    enabled: Optional[bool] = False
    """
    Enable/disable backup of the topics configuration
    """
    S3: Optional[S3Output] = None
    """
    Enables exports to be sent to S3.
    """
    BackupStyles: Optional[List[BackupStyle]] = field(
        default_factory=lambda: [BackupStyle.kafka_topics_sh]
    )
    """
    List the types of backups you want to generate.
    """


@dataclass
class ClusterConfiguration:
    cluster_config: ClusterConfig
    reporting_config: ReportingConfig
    cluster_scan_interval_in_seconds: Optional[ClusterScanIntervalInSeconds] = 60
    """
    Overrides the global setting
    """
    topics_backup_config: Optional[ClusterTopicBackupConfig] = None
    awareness_topic: Optional[str] = "_overwatchAwareness"
    """
    Name of a topic that the Overwatch will subscribe to. This allows multiple instances of the overwatch to be aware and disable features that shouldn't be distributed
    """
    topic_include_regexes: Optional[Regexes] = None
    topic_exclude_regexes: Optional[Regexes] = None
    metrics: Optional[ClusterMetrics] = None
    """
    Configure metrics export for the cluster
    """


@dataclass
class KafkaOverwatchInputConfiguration:
    """
    Specification for Kafka topics/partitions hunter service
    """

    global_: Optional[Global] = None
    """
    Global settings. Apply to all clusters
    """
    clusters: Optional[Dict[str, ClusterConfiguration]] = None
    """
    Kafka clusters to monitor and report on the partitions usage
    """
    gateways: Optional[Dict[str, GatewayConfiguration]] = None
    """
    Gateways to monitor and import the vClusters from the partitions usage
    """
    prometheus: Optional[Any] = None
    notification_channels: Optional[NotificationChannels] = None
    aws_emf: Optional[AwsEmfModel] = None
